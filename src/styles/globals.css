html {
  -webkit-text-size-adjust: 100%;
  font-family: SÃ¶hne, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu,
    Cantarell, Noto Sans, sans-serif, Helvetica Neue, Arial, Apple Color Emoji,
    Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  line-height: 1.5;
  tab-size: 4;
}

body {
  line-height: inherit;
  margin: 0;
}

body,
html {
  height: 100%;
}

#__next {
  position: relative;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.app {
  display: flex;
  flex: 1 1 0%;
  height: 100%;
  flex-direction: column;
}

*,
:after,
:before {
  border: 0 solid #d9d9e3;
  box-sizing: border-box;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  margin: 0;
  padding: 0;
}

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
  display: block;
  vertical-align: middle;
}

button,
select {
  text-transform: none;
}

[role="button"],
button {
  cursor: pointer;
}

textarea {
  resize: vertical;
}

[multiple],
[type="date"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  appearance: none;
  -webkit-appearance: none;
  background-color: #fff;
  border-color: #8e8ea0;
  border-radius: 0;
  border-width: 1px;
  font-size: 1rem;
  line-height: 1.5rem;
  padding: 0.5rem 0.75rem;
}

[type="button"],
[type="reset"],
[type="submit"],
button {
  background-color: transparent;
  background-image: none;
}

[role="button"],
button {
  cursor: pointer;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(217, 217, 227, 0.8);
  border-color: rgba(255, 255, 255, 1);
  border-radius: 9999px;
  border-width: 1px;
}

::-webkit-scrollbar-track {
  background-color: transparent;
  border-radius: 9999px;
}

::-webkit-scrollbar {
  height: 1rem;
  width: 0.5rem;
}

.container-main {
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
  align-items: stretch;
  position: relative;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  overflow: hidden;
  transition-duration: 0.15s;
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.container-overflow-hidden {
  flex: 1 1 0%;
  overflow: hidden;
}

.container-relative {
  display: block;
  position: relative;
  height: 100%;
}

.container-scrollable {
  display: block;
  height: 100%;
  width: 100%;
  overflow-y: auto;
}

.container-messages {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.container-message {
  display: block;
  width: 100%;
  border-bottom-width: 1px;
  border-color: rgba(0, 0, 0, 0.1);
  color: rgba(52, 53, 65, 1);
  background-color: rgba(255, 255, 255, 1);
}

.container-message:nth-child(even) {
  background-color: rgba(247, 247, 248, 1);
}

.container-message-inner {
  display: flex;
  margin: auto;
  gap: 1.5rem;
  padding-bottom: 1.5rem;
  padding-top: 1.5rem;
  padding-left: 0;
  padding-right: 0;
  max-width: 42rem;
  gap: 1.5rem;
  font-size: 1rem;
  line-height: 1.5rem;
}

.container-avatar {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  position: relative;
  width: 30px;
}

.container-avatar-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 30px;
  height: 30px;
  background-color: rgb(16, 163, 127);
  border-radius: 0.125rem;
}

.container-avatar-inner img {
  display: block;
  width: 100%;
  height: auto;
  width: 30px;
  height: 30px;
  border-radius: 0.125rem;
}

.container-message-body {
  display: flex;
  flex-direction: column;
  position: relative;
  gap: 0.75rem;
  width: calc(100% - 115px);
}

.container-message-body-text {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  gap: 0.75rem;
}

.container-message-body-wrap {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  min-height: 20px;
  white-space: pre-wrap;
  gap: 1rem;
}

.markdown {
  display: block;
  color: #374151;
  font-size: 1rem;
  line-height: 1.75;
  width: 100%;
  word-wrap: break-word;
  max-width: none;
}

.container-message-feedback {
  display: flex;
  justify-content: space-between;
}

.feedback {
  display: flex;
  justify-content: center;
  visibility: visible;
  align-self: center;
  padding-left: 0.5rem;
  color: rgba(172, 172, 190, 1);
  position: absolute;
  top: 0;
  right: 0;
  margin-top: 0;
  gap: 0.25rem;
  transform: translate(100%, 0) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1);
}

.feedback button {
  padding: 0.25rem;
  border-radius: 0.375rem;
  cursor: pointer;
}

.feedback button:hover {
  background-color: rgba(236, 236, 241, 1);
}

.feedback svg {
  width: 1rem;
  height: 1rem;
}

.container-message-pad {
  display: block;
  height: 9rem;
  flex-shrink: 0;
  width: 100%;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.form-container {
  display: block;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding-top: 0.5rem;
  border-top-width: 0;
  border-color: transparent;
  background-color: transparent !important;
  background-image: linear-gradient(
    180deg,
    hsla(0, 0%, 100%, 0) 13.94%,
    #fff 54.73%
  );
}

.form {
  display: flex;
  flex-direction: row;
  gap: 0.75rem;
  margin-left: auto;
  margin-right: auto;
  max-width: 48rem;
}

.form-inner {
  display: flex;
  position: relative;
  height: 100%;
  flex: 1 1 0%;
  flex-direction: column;
}

.input-group {
  display: flex;
  position: relative;
  width: 100%;
  flex-grow: 1;
  flex-direction: column;
  border-radius: 0.375rem;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0.1);
  padding-bottom: 0.75rem;
  padding-top: 0.75rem;
  padding-left: 1rem;
  background-color: rgba(255, 255, 255, 1);
  border-color: rgba(0, 0, 0, 0.1);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.textarea {
  margin: 0;
  width: 100%;
  resize: none;
  border-width: 0;
  background-color: transparent;
  padding: 0;
  padding-right: 1.75rem;
  padding-left: 0;
  max-height: 200px;
  height: 24px;
  overflow-y: hidden;
  outline: none;
}

.send-button {
  position: absolute;
  border-radius: 0.375rem;
  padding: 0.25rem;
  color: rgba(142, 142, 160, 1);
  bottom: 0.625rem;
  right: 0.5rem;
}

.send-button:hover {
  background-color: rgba(236, 236, 241, 1);
}

.send-button svg {
  margin-right: 0.25rem;
  height: 1rem;
  width: 1rem;
}

.footnote {
  text-align: center;
  font-size: 0.75rem;
  line-height: 1rem;
  color: rgba(0, 0, 0, 0.5);
  padding-right: 1rem;
  padding-left: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 1.5rem;
}

/* MARKDOWN */

.md {
  --md-body: #374151;
  --md-headings: #111827;
  --md-lead: #4b5563;
  --md-links: #111827;
  --md-bold: #111827;
  --md-counters: #6b7280;
  --md-bullets: #d1d5db;
  --md-hr: #e5e7eb;
  --md-quotes: #111827;
  --md-quote-borders: #e5e7eb;
  --md-captions: #6b7280;
  --md-code: #111827;
  --md-pre-code: #e5e7eb;
  --md-pre-bg: #1f2937;
  --md-th-borders: #d1d5db;
  --md-td-borders: #e5e7eb;
  --md-invert-body: #d1d5db;
  --md-invert-headings: #fff;
  --md-invert-lead: #9ca3af;
  --md-invert-links: #fff;
  --md-invert-bold: #fff;
  --md-invert-counters: #9ca3af;
  --md-invert-bullets: #4b5563;
  --md-invert-hr: #374151;
  --md-invert-quotes: #f3f4f6;
  --md-invert-quote-borders: #374151;
  --md-invert-captions: #9ca3af;
  --md-invert-code: #fff;
  --md-invert-pre-code: #d1d5db;
  --md-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --md-invert-th-borders: #4b5563;
  --md-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.md {
  color: var(--md-body);
  max-width: 65ch;
}

.md :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--md-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-bottom: 1.2em;
  margin-top: 1.2em;
}

.md :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--md-links);
  font-weight: 500;
  text-decoration: underline;
}

.md :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--md-bold);
  font-weight: 600;
}

.md :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-bottom: 1.25em;
  margin-top: 1.25em;
  padding-left: 1.625em;
}

.md :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.md :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.md :where(ol[type="A s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.md :where(ol[type="a s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.md :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.md :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.md :where(ol[type="I s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.md :where(ol[type="i s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.md :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.md :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-bottom: 1.25em;
  margin-top: 1.25em;
  padding-left: 1.625em;
}

.md :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--md-counters);
  font-weight: 400;
}

.md :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--md-bullets);
}

.md :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--md-hr);
  border-top-width: 1px;
  margin-bottom: 3em;
  margin-top: 3em;
}

.md :where(blockquote):not(:where([class~="not-prose"] *)) {
  border-left-color: var(--md-quote-borders);
  border-left-width: 0.25rem;
  color: var(--md-quotes);
  font-style: italic;
  font-style: normal;
  font-weight: 500;
  margin-bottom: 1.6em;
  margin-top: 1.6em;
  padding-left: 1em;
  quotes: "\201C""\201D""\2018""\2019";
}

.md
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"] *)
  ):before {
  content: open-quote;
}

.md
  :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *)):after {
  content: close-quote;
}

.md :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--md-headings);
  font-size: 2.25em;
  font-weight: 800;
  line-height: 1.1111111;
  margin-bottom: 0.8888889em;
  margin-top: 0;
}

.md :where(h1 strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-weight: 900;
}

.md :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--md-headings);
  font-size: 1.5em;
  font-weight: 700;
  line-height: 1.3333333;
  margin-bottom: 1em;
  margin-top: 2em;
}

.md :where(h2 strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-weight: 800;
}

.md :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--md-headings);
  font-size: 1.25em;
  font-weight: 600;
  line-height: 1.6;
  margin-bottom: 0.6em;
  margin-top: 1.6em;
}

.md :where(h3 strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-weight: 700;
}

.md :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--md-headings);
  font-weight: 600;
  line-height: 1.5;
  margin-bottom: 0.5em;
  margin-top: 1.5em;
}

.md :where(h4 strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-weight: 700;
}

.md :where(img):not(:where([class~="not-prose"] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.md :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
  margin-top: 0;
}

.md :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--md-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.md :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--md-code);
  font-size: 0.875em;
  font-weight: 600;
}

.md :where(code):not(:where([class~="not-prose"] *)):before {
  content: "`";
}

.md :where(code):not(:where([class~="not-prose"] *)):after {
  content: "`";
}

.md :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.md :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.md :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.md :where(pre):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-radius: 0.375rem;
  color: currentColor;
  font-size: 0.875em;
  font-weight: 400;
  line-height: 1.7142857;
  margin: 0;
  overflow-x: auto;
  padding: 0;
}

.md :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-radius: 0;
  border-width: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  padding: 0;
}

.md :where(pre code):not(:where([class~="not-prose"] *)):before {
  content: none;
}

.md :where(pre code):not(:where([class~="not-prose"] *)):after {
  content: none;
}

.md :where(table):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-bottom: 2em;
  margin-top: 2em;
  table-layout: auto;
  text-align: left;
  width: 100%;
}

.md :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-color: var(--md-th-borders);
  border-bottom-width: 1px;
}

.md :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--md-headings);
  font-weight: 600;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
  padding-right: 0.5714286em;
  vertical-align: bottom;
}

.md :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-color: var(--md-td-borders);
  border-bottom-width: 1px;
}

.md :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.md :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.md :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-color: var(--md-th-borders);
  border-top-width: 1px;
}

.md :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.md :where(p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
  margin-top: 1.25em;
}

.md :where(video):not(:where([class~="not-prose"] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.md :where(figure):not(:where([class~="not-prose"] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.md :where(li):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

.md :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.md :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.md :where(.md > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.md :where(.md > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.md :where(.md > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.md :where(.md > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.md :where(.md > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.md :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.md :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.md :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.md :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding: 0.5714286em;
}

.md
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-left: 0;
}

.md
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-right: 0;
}

.md :where(.md > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md :where(.md > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.md-sm :where(.md > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.5714286em;
  margin-top: 0.5714286em;
}

.md-sm
  :where(.md > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.md-sm :where(.md > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.md-sm
  :where(.md > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.md-sm :where(.md > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.md-sm :where(.md > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md-sm :where(.md > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.md-base :where(.md > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.md-base
  :where(.md > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.md-base
  :where(.md > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.md-base
  :where(.md > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.md-base
  :where(.md > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.md-base :where(.md > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md-base :where(.md > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.md-lg :where(.md > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.8888889em;
  margin-top: 0.8888889em;
}

.md-lg
  :where(.md > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.md-lg :where(.md > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.md-lg
  :where(.md > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.md-lg :where(.md > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.md-lg :where(.md > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md-lg :where(.md > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.md-xl :where(.md > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.8em;
  margin-top: 0.8em;
}

.md-xl
  :where(.md > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.md-xl :where(.md > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.md-xl
  :where(.md > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.md-xl :where(.md > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.md-xl :where(.md > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md-xl :where(.md > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.md-2xl :where(.md > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0.8333333em;
  margin-top: 0.8333333em;
}

.md-2xl
  :where(.md > ul > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.md-2xl
  :where(.md > ul > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.md-2xl
  :where(.md > ol > li > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.md-2xl
  :where(.md > ol > li > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.md-2xl :where(.md > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.md-2xl :where(.md > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.md-invert {
  --md-body: var(--md-invert-body);
  --md-headings: var(--md-invert-headings);
  --md-lead: var(--md-invert-lead);
  --md-links: var(--md-invert-links);
  --md-bold: var(--md-invert-bold);
  --md-counters: var(--md-invert-counters);
  --md-bullets: var(--md-invert-bullets);
  --md-hr: var(--md-invert-hr);
  --md-quotes: var(--md-invert-quotes);
  --md-quote-borders: var(--md-invert-quote-borders);
  --md-captions: var(--md-invert-captions);
  --md-code: var(--md-invert-code);
  --md-pre-code: var(--md-invert-pre-code);
  --md-pre-bg: var(--md-invert-pre-bg);
  --md-th-borders: var(--md-invert-th-borders);
  --md-td-borders: var(--md-invert-td-borders);
}
